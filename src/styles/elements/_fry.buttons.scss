/* ---------------------------------------------------------------------------*/
/* BASE: BUTTONS                                                              */

$button-height            : 3.9rem; // 39px
$button-height--sm        : 3rem; // 30px
$button-height--lg        : 4.8rem;
$button-padding           : $size-default;
$button-text              : $color-fry-white;
$button-line-height       : 1;
$button-border-radius     : .4rem;
$button-font-family       : $font-sans;
$button-font-weight       : $font-normal;
$button-font-size         : $font-size-3;

$button-default           : $color-fry-secondary;
$button-default-text      : $button-text;
$button-default-hover     : shade($button-default, 25%);
$button-default-active    : shade($button-default, 55%);

$button-primary           : $color-fry-secondary;
$button-primary-text      : $button-text;
$button-primary-hover     : shade($button-primary, 25%);
$button-primary-active    : shade($button-primary, 45%);

$button-secondary        : $color-fry-tertiary;
$button-secondary-text   : $button-text;
$button-secondary-hover  : shade($button-secondary, 25%);
$button-secondary-active : shade($button-secondary, 45%);

$button-tertiary        : $color-fry-red;
$button-tertiary-text   : $button-text;
$button-tertiary-hover  : shade($button-secondary, 25%);
$button-tertiary-active : shade($button-secondary, 45%);

$button-alt              : $color-fry-white;
$button-alt-text         : $color-fry-secondary;
$button-alt-hover        : shade($button-alt, 5%);
$button-alt-active       : $color-fry-secondary;
$button-alt-border       : $color-fry-secondary;
$button-alt-border-width : 1px;

$button-flat-padding     : 0;
$button-flat             : transparent;
$button-flat-text        : $color-fry-link;
$button-flat-hover       : transparent;
$button-flat-active      : transparent;
$button-flat-border      : transparent;
$button-flat-border-width: 1px;

@mixin fry-button($variation: default) {

  white-space: nowrap;

  @if $variation == 'default' {

    @include fry-space-between();

    // -------------------------------------------------------------------------
    // reset
    @include font-smoothing(on);
    @include reset-button();
    height: $button-height;
    user-select: none;
    text-align: center;
    line-height: $button-line-height;
    position: relative;
    top: .1rem;
    // scss-lint:disable all ImportantRule
    text-decoration: none !important; // yep, intentional

    @supports (-webkit-appearance:none) {
      // Webkit only.
      // yes, a single pixel. sorry, not sorry
      top: 0;
    }

    // -------------------------------------------------------------------------
    // normalize
    font-size: $button-font-size;
    font-family: $button-font-family;
    font-weight: $button-font-weight;
    display: inline-block;
    border-radius: $button-border-radius;

    // scss-lint:disable Shorthand
    padding:
      ($button-padding - .1rem)
      ($button-padding * 1.5)
      ($button-padding - .1rem)
    ;

    // -------------------------------------------------------------------------
    // default

    background-color: $button-default;
    color: $button-default-text;

    &:visited {
      color: $button-default-text;
    }

    &:hover {
      text-decoration: none;
      color: $button-default-text;
    }

    &:hover:not([disabled]) {
      color: $button-text;
      background-color: $button-default-hover;
    }

    &:focus:not([disabled]),
    &:active:not([disabled]) {
      color: $button-text;
      background-color: $button-default-active;
      box-shadow: none;
    }

    &[disabled] {

      $color-transparentized: transparentize($button-default-text, .2);

      opacity: .65;
      color: $color-transparentized;
      filter: saturate(70%);
      cursor: not-allowed;

      color: $color-transparentized;

      &:visited {
        color: $color-transparentized;
      }

      &:hover {
        color: $color-transparentized;
        cursor: not-allowed;
      }

    }

  }

  @elseif $variation == 'primary' {

    background-color: $button-primary;
    color: $button-primary-text;

    &:visited {
      color: $button-primary-text;
    }

    &:hover {
      color: $button-primary-text;
    }

    &:hover:not([disabled]) {
      background-color: $button-primary-hover;
    }

    &:focus:not([disabled]),
    &:active:not([disabled]) {
      color: $button-primary-text;
      background-color: $button-primary-active;
    }

  }

  @elseif $variation == 'secondary' {

    color: $button-secondary-text;
    background-color: $button-secondary;

    &:hover:not([disabled]) {
      color: $button-secondary-text;
      background-color: $button-secondary-hover;
    }

    &:focus:not([disabled]),
    &:active:not([disabled]) {
      color: $button-secondary-text;
      background-color: $button-secondary-active;
    }

  }

  @elseif $variation == 'tertiary' {

    color: $button-tertiary-text;
    background-color: $button-tertiary;

    &:hover:not([disabled]) {
      color: $button-tertiary-text;
      background-color: $button-tertiary-hover;
    }

    &:focus:not([disabled]),
    &:active:not([disabled]) {
      color: $button-tertiary-text;
      background-color: $button-tertiary-active;
    }

  }

  @elseif $variation == 'alt' {

    color: $button-alt-text;
    background-color: $button-alt;
    box-shadow: 0 0 0 $button-alt-border-width $button-alt-border inset;

    &:visited {
      color: $button-alt-text;
    }

    &:hover {
      color: inherit;
    }

    &:hover:not([disabled]) {
      color: $button-alt-text;
      background-color: $button-alt-hover;
    }

    &:focus:not([disabled]),
    &:active:not([disabled]) {
      color: $button-alt-hover;
      background-color: $button-alt-active;
      box-shadow: none;
    }

    // scss-lint:disable SelectorFormat
    &[disabled] {
      color: $button-alt-text;
      &:hover {
        color: $button-alt-text;
      }
    }

  }

  @elseif $variation == 'block' {
    width: 100%;
    display: block;
  }

  @elseif $variation == 'small' {

    height: $button-height--sm;
    // scss-lint:disable SpaceAfterPropertyColon TrailingSemicolon Shorthand
    padding:
      ($size-small)
      ($size-default)
      ($size-small)
    ;
    font-size: $font-size-1; // no we're not using mixin cuz we don't want its line-height
    border-radius: ($button-border-radius / 2);

  }

  @elseif $variation == 'large' {

    height: $button-height--lg;

    // scss-lint:disable SpaceAfterPropertyColon TrailingSemicolon Shorthand
    padding:
      (($button-padding) + .2rem)
      ($size-medium - .2rem)
    ;
    font-size: $font-size-4; // no we're not using mixin cuz we don't want its line-height
    border-radius: ($button-border-radius * 1.5);

  }

  @elseif $variation == 'flat' {

    text-align: left;
    height: auto;
    padding-top: 0;
    padding-bottom: 0;
    color: $button-flat-text;
    background-color: $button-flat;
    box-shadow: 0 0 0 $button-flat-border-width $button-flat-border inset;
    // scss-lint:disable ImportantRule
    text-decoration: underline !important;

    &:not(.fry-btn-small),
    &:not(.fry-btn-large) {
      padding-right: $button-flat-padding;
      padding-left: $button-flat-padding;
    }

    &:visited {
      color: $button-flat-text;
    }

    &:hover {
      color: inherit;
    }

    &:hover:not([disabled]) {
      color: $color-fry-link-hover;
      background-color: $button-flat-hover;
    }

    &:focus:not([disabled]),
    &:active:not([disabled]) {
      color: $button-flat-text;
      background-color: $button-flat-active;
      box-shadow: none;
    }

    // scss-lint:disable SelectorFormat
    &[disabled] {
      color: $button-flat-text;
      &:hover {
        color: $button-flat-text;
      }
    }

  }

}

.fry-btn {

  @include fry-button(default);

  // scss-lint:disable all

  &--primary   { @include fry-button(primary);   }
  &--secondary { @include fry-button(secondary); }
  &--tertiary  { @include fry-button(tertiary);  }
  &--alt       { @include fry-button(alt);       }
  &--block     { @include fry-button(block);     }
  &--small     { @include fry-button(small);     }
  &--large     { @include fry-button(large);     }
  &--flat      { @include fry-button(flat);      }

}
